global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        ssl-server-verify none
        # Default SSL material locations
defaults
        defaults
        mode                    http
        log                     global
        option                  httplog
        option                  dontlognull
        option http-server-close
        option forwardfor       except 127.0.0.0/8
        option                  redispatch
        retries                 3
        timeout http-request    10s
        timeout queue           1m
        timeout connect         10s
        timeout client          1m
        timeout server          1m
        timeout http-keep-alive 10s
        timeout check           10s
        maxconn                 3000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

# The frontend only listens on port 80
# If it detects a LetsEncrypt request, is uses the LE backend
# Else it goes to the default backend for the web servers
frontend fe-{{ domain }}
    bind *:80

    http-response set-header Access-Control-Allow-Origin "{{ domain }}"
    http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, JSNLog-RequestId, activityId, applicationId, applicationUserId, channelId, senderId, sessionId"
    http-response set-header Access-Control-Max-Age 3628800
    http-response set-header Access-Control-Allow-Methods "GET, DELETE, OPTIONS, POST, PUT"

    option http-server-close
    option forwardfor
########################### ACLs
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-{{ domain }} if letsencrypt-acl
########################### DEFAULT
    default_backend be-{{ domain }}

# LE Backend
backend letsencrypt-{{ domain }}
    server letsencrypt 127.0.0.1:{{ letsenrypt_port }}

# Normal (default) Backend
# for web app servers
backend be-{{ domain }}
    server wsDefault1 {{ webserver_master_default }}:80 check