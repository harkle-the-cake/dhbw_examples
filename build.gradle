/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'maven'

archivesBaseName = 'example-webservive'
version = '0.0.1'

targetCompatibility = '1.8'
sourceCompatibility  = '1.8'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

task customFatJarServer(type: Jar) {
    manifest {
        attributes "Main-Class": "eu.boxwork.examples.webservice.Server"
    }
 
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
    		exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    with jar
}


task customFatJarWebserver(type: Jar) {
    manifest {
        attributes "Main-Class": "eu.boxwork.examples.webservice.Webserver"
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    with jar
}

task customFatJarClient(type: Jar) {
    manifest {
        attributes "Main-Class": "eu.boxwork.examples.webservice.Client"
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    with jar
}


test {

}

task createPom {
    pom {
        project {
            groupId 'eu.boxwork.examples.webservice'
            artifactId 'service'

            inceptionYear '2020'
            licenses {
                license {
                    name = 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
         
 	// https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl
	compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'

	// https://mvnrepository.com/artifact/com.sun.jersey/jersey-bundle
	compile group: 'com.sun.jersey', name: 'jersey-bundle', version: '1.19.4'
	compile group: 'com.sun.jersey', name: 'jersey-json', version: '1.19.4'
	
	// log4j
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // Used for testing with REST mocks
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.26.0'
    
    // https://mvnrepository.com/artifact/com.openpojo/openpojo
	testImplementation 'com.openpojo:openpojo:0.8.13'
}

